version: '2'
services:
  nginx:
    build: ./nginx/
    container_name: magento2-demo-nginx
    ports:
      - "80:8080"
    volumes:
      - ../code:/var/www/html/magento2
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/filebeat/filebeat.yml:/etc/filebeat/filebeat.yml
    depends_on:
      - phpfpm
    networks:
      - website

  # varnish:
  #   build: ./varnish/
  #   container_name: magento2-demo-varnish
  #   environment:
  #     - VIRTUAL_HOST=blog.benhall.me.uk
  #     - VARNISH_BACKEND_PORT=80
  #     - VARNISH_BACKEND_HOST=wordpress
  #   networks:
  #     - website

  phpfpm:
    build: ./phpfpm/
    container_name: magento2-demo-fpm
    volumes:
      - ../code:/var/www/html/magento2
      - ./phpfpm/magento2/setup:/var/www/html/setup
    networks:
      - website

  crontab:
    build: ./crontab/
    container_name: magento2-demo-crontab
    volumes:
      - ../code:/var/www/html/magento2
    networks:
      - website
  
  mysql:
    image: mysql:5.6
    container_name: magento2-demo-mysql
    privileged: true
    user: root
    volumes:
      # - "mysql-data:/var/lib/mysql"
      - "./mysql/mysql56/data:/var/lib/mysql"
      - "./mysql/mysql56/init:/docker-entrypoint-initdb.d"
      # - "./mysql/mysql56/mysql/conf.d:/etc/mysql/conf.d"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: magento2
      MYSQL_USER: magento2demo
      MYSQL_PASSWORD: magento2demo
    ports:
      - "3306:3306"
    networks:
      - website
# volumes:
#   mysql-data:
#     driver: local
networks:
    website:
      driver: bridge